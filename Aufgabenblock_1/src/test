void vAufgabe2(){
	int Zahl,Zahl1;
	double MaxG,Verbrauch,TankenV,g;
	double extern dGlobaleZeit;
	string Name;
	cout<<"Die Anzahl der zu erzeugenden PKWs: "<<'\n';
	cin>>Zahl;
	cout<<"Die Anzahl der zu erzeugenden Fahrräder: "<<'\n';
	cin>>Zahl1;
	vector<unique_ptrx&<Fahrzeug>> v2;

	for (int i=0;i<Zahl;i++){
			cout<<"Name des PKWs: "<<'\n';
			cin>>Name;
			cout<<"MaxG des PKWs: "<<'\n';
			cin>>MaxG;
			cout<<"Verbrauch des PKWs: "<<'\n';
			cin>>Verbrauch;
			cout<<"TankenV des PKWs: "<<'\n';
			cin>>TankenV;
			v2.push_back(make_unique<PKW>(Name,MaxG,Verbrauch,TankenV));
		}

	/*g=v2[0]->dTanken();
	cout<<"g="<<g<<endl;
	*/ //test von dTanken()


	for (int i=0;i<Zahl1;i++){
		cout<<"Name des Fahrrads: "<<'\n';
		cin>>Name;
		cout<<"MaxG des Fahrrads: "<<'\n';
		cin>>MaxG;
		v2.push_back(make_unique<Fahrrad>(Name,MaxG));
	}

	while(dGlobaleZeit<10){
		dGlobaleZeit +=1;
		v2[0]->vKopf();
		cout<<"\n";
		if(dGlobaleZeit==3){
			for (int j=0;j<Zahl;j++){
				g=v2[j]->dTanken();
			}
		}
		for (size_t i=0;i<v2.size();i++){
			v2[i]->vSimulieren();
			v2[i]->vAusgeben();
			cout<<"\n";
		}

	}
}


//vAufgabe_1();
	//Fahrzeug d("Polo",1000.00);

	//vAufgabe_1a();

	/*PKW t("Polo",100,15,50);
	Fahrzeug::vKopf();
	cout<<"\n";
	for(int i=0;i<3;i++){
	dGlobaleZeit+=1;
	cout<<t;
	t.vSimulieren();
	cout<<"\n";
	}*/

	/*Fahrrad f("VTT",40);
	f.vKopf();
	cout<<"\n";
	for(int i=0;i<3;i++){
		cout<<f;
		dGlobaleZeit+=1;
		f.vSimulieren();
		cout<<"\n";			//test für AktuelleGeschwindigkeit
		}*/
		
		
		
		/*void vAufgabe_1() {
	Fahrzeug t;
	Fahrzeug t1("Mercedes");

	Fahrzeug* p= new Fahrzeug("Polo");
	delete p;

	unique_ptr<Fahrzeug> U = std::make_unique<Fahrzeug>("Opel");
	unique_ptr<Fahrzeug> U1 = std::make_unique<Fahrzeug>("Renault");
	//unique_ptr<Fahrzeug> U2 = U1; nicht möglich: unique_ptr kann nicht koppiert werden

	shared_ptr<Fahrzeug> S = std::make_shared<Fahrzeug>("Volkswagen");
	shared_ptr<Fahrzeug> S1 = std::make_shared<Fahrzeug>("Mazda");
	cout<<"Shared Pointer count: "<<S1.use_count()<<"\n";
	shared_ptr<Fahrzeug> S2 = S1;
	cout<<"Shared Pointer count: "<<S1.use_count()<<"\n";		// +1 for the shared_pointer S1



	vector<unique_ptr<Fahrzeug>> v;
	v.push_back(move(U));	// kann nicht U als Parameter geben, weil ptr unique ist.
	v.push_back(move(U1));
	v.clear();				// clear the vector
	cout<<v.empty()<<"\n"; // check if the vector is empty


}

void vAufgabe_1a(){

	vector<unique_ptr<Fahrzeug>> v1;

	string n;
	int s;
	for (int i=0;i<3;i++){
		cout<<"Enter the car name: "<<"\n";
		cin>>n;
		cout<<"Enter the car maximum speed: "<<"\n";
		cin>>s;
		v1.push_back(make_unique<Fahrzeug>(n,s));
	}
	Fahrzeug::vKopf();
	double extern dGlobaleZeit;
	for(int i=0;i<3;i++){
		dGlobaleZeit+=0.75;
		v1[0]->vSimulieren();
		cout<<endl;
		v1[0]->vAusgeben();
	}
	cout<<"\n";
}*/


		